// Generated by CoffeeScript 1.6.3
var Bind, Event;

Event = require('the-event');

module.exports = Bind = (function() {
  Bind.prototype.ev = null;

  function Bind() {
    this.ev = new Event;
  }

  Bind.prototype.on = function(key, callback) {
    var store;
    this.ev.on(key, callback);
    store = this.__store || (this.__store = {});
    if (store.hasOwnProperty(key)) {
      return this.ev.emit(key, store[key]);
    }
  };

  Bind.prototype.off = function(key, callback) {
    return this.ev.off(key, callback);
  };

  Bind.prototype.get = function(key) {
    var _ref;
    return (_ref = this.__store) != null ? _ref[key] : void 0;
  };

  Bind.prototype.set = function(key, value) {
    var k, store, v;
    store = this.__store || (this.__store = {});
    if (arguments.length === 2) {
      if (store[key] !== value) {
        this.ev.emit(key, store[key] = value);
      }
      return value;
    } else if (key instanceof Object) {
      for (k in key) {
        v = key[k];
        this.set(k, v);
      }
      return key;
    } else {
      throw new Error('Cannot set property, it must be a dictionary');
    }
  };

  return Bind;

})();
